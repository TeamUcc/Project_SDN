version: '3.8'

services:
  onos:
    image: onosproject/onos:2.6.0
    container_name: sdn-onos
    hostname: onos
    ports:
      - "8181:8181"   # REST API and GUI
      - "8101:8101"   # SSH CLI
      - "9876:9876"   # Intra-cluster communication
      - "6653:6653"   # OpenFlow
      - "6640:6640"   # OVSDB
    environment:
      - ONOS_APPS=drivers,openflow,fwd,acl,vpls,proxyarp
      - JAVA_OPTS=-Xmx2G
    volumes:
      - onos_data:/root/onos
      - ./configs/onos:/root/onos/config
    networks:
      - sdn_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/onos/ui"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mininet:
    image: iwaseyusuke/mininet:latest
    container_name: sdn-mininet
    hostname: mininet
    privileged: true
    stdin_open: true
    tty: true
    depends_on:
      onos:
        condition: service_healthy
    volumes:
      - /lib/modules:/lib/modules:ro
      - ./topologies:/topologies
      - ./scripts:/scripts
    networks:
      - sdn_network
    environment:
      - DISPLAY=${DISPLAY}
      - CONTROLLER_IP=onos
    restart: "no"
    command: >
      bash -c "
        echo 'Waiting for ONOS to be ready...' &&
        sleep 30 &&
        echo 'Starting default topology...' &&
        mn --topo tree,2,2 --mac --switch ovs,protocols=OpenFlow14 --controller remote,ip=onos,port=6653 --link tc
      "

networks:
  sdn_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  onos_data:
    driver: local
